name: CI/CD - Test et Build FastAPI + Modèle IA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      MYSQL_USER: root
      MYSQL_PASSWORD:
      MYSQL_DB: test_db
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306

    steps:
      - name:  Cloner le dépôt
        uses: actions/checkout@v3

      - name:  Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name:  Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name:  Lancer les tests unitaires
        working-directory: ./backend
        run: |
          pytest tests/

      - name:  Construire l’image Docker
        run: |
          docker build -t ia-model-api:latest -f backend/Dockerfile .

      - name: Installer les dépendances React
        working-directory: ./project
        run: npm install --legacy-peer-deps

      - name: Lancer les tests React
        working-directory: ./project
        run: npm test -- --watchAll=false

      # Optionnel : push vers DockerHub (il te faut un secret)
      # - name:  Pousser l’image sur DockerHub
      #   run: |
      #     echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #     docker tag ia-model-api yourdockerhubuser/ia-model-api:latest
      #     docker push yourdockerhubuser/ia-model-api:latest
